# name: Reusable CI/CD for ArgoCD & Kubernetes

# on:
#   workflow_call:
#     inputs:
#       app_name:
#         description: 'ArgoCD Application Name'
#         required: true
#         type: string
#       environment:
#         description: 'Deployment environment (dev, staging, prod)'
#         required: true
#         type: string
#       image_tag:
#         description: 'Docker image tag to deploy'
#         required: false
#         type: string
#     secrets:
#       ARGOCD_SERVER:
#         required: true
#       ARGOCD_USERNAME:
#         required: true
#       ARGOCD_PASSWORD:
#         required: true
#       DOCKER_USERNAME:
#         required: true
#       DOCKER_PASSWORD:
#         required: true

# jobs:
#   cd-process:
#     name: Deploy to Kubernetes via ArgoCD
#     needs: ci
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout CI/CD Repository
#         uses: actions/checkout@v4

#       - name: Install ArgoCD CLI
#         run: |
#           curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
#           chmod +x argocd-linux-amd64
#           sudo mv argocd-linux-amd64 /usr/local/bin/argocd

#       - name: Login to ArgoCD
#         run: |
#           argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure

#       - name: Update Kubernetes Manifests (Kustomize)
#         run: |
#           cd kustomize/overlays/${{ inputs.environment }}
#           kustomize edit set image my-org/${{ inputs.app_name }}=my-org/${{ inputs.app_name }}:${{ inputs.image_tag || 'latest' }}
#           kustomize build . > manifests.yaml
#           git add manifests.yaml
#           git commit -m "Deploy ${{ inputs.app_name }} to ${{ inputs.environment }} with tag ${{ inputs.image_tag || 'latest' }}"
#           git push origin main

#       - name: Sync ArgoCD Application
#         run: |
#           argocd app sync ${{ inputs.app_name }} --async
#           argocd app wait ${{ inputs.app_name }} --health
