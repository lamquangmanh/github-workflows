name: Reusable CI for ArgoCD & Kubernetes

on:
  workflow_call:
    inputs:
      environment:
        description: 'Deployment environment (dev, staging, prod)'
        required: true
        type: string

jobs:
  ci-process:
    name: CI process
    runs-on: ubuntu-latest
    # This is option 2: run on the runner of inputs
    # runs-on: ["${{ inputs.RUNNER }}"]
    permissions:
      contents: read
      packages: read

    # Prevents parallel execution of the same workflow on the same branch.
    # If a new workflow run starts for the same branch/ref, the previous run is canceled.
    concurrency:
      group: ${{ github.workflow }}-ci-process-${{ github.ref }}
      cancel-in-progress: true

    # Sets the environment dynamically using a GitHub Action input.
    # This value determines which environment (staging, production, etc.) the workflow is targeting.
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # ensures only the latest commit is pulled (faster performance).
          fetch-depth: 1

      - name: Setup nodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # creates a .npmrc file in the home directory of the runner.
      - name: Create .npmrc securely
        run: |
          echo "@lamquangmanh:registry=https://npm.pkg.github.com" >> $HOME/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> $HOME/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GIT_PAT }}

      - name: Install yarn
        run: npm install -g yarn

      # Installs project dependencies without modifying yarn.lock.
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GIT_PAT  }}

      # Build the project: Compiles/transpiles the project.
      - name: Build
        run: |
          yarn install --frozen-lockfile
          yarn run build
